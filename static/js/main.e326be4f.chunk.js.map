{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","moveX","maxMove","props","itemWidth","frameSize","distinationMove","step","handleClickMoveRight","infinite","setState","prevstate","handleClickMoveLeft","this","animationDuration","width","className","type","onClick","disabled","style","transform","transition","images","map","img","ind","src","alt","String","React","Component","AppAltern","handleChange","event","str","newValueVariable","Number","target","value","name","Object","keys","includes","handleInfinite","checked","length","onChange","min","max","id","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e326be4f.chunk.js","sourcesContent":["/* eslint-disable no-nested-ternary */\n// import { transform } from 'cypress/types/lodash';\nimport React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\ntype State = {\n  moveX: number,\n};\n\nexport class Carousel extends React.Component<Props, State> {\n  state: Readonly<State> = {\n    moveX: 0,\n  };\n\n  maxMove = () => -(this.props.itemWidth * (10 - this.props.frameSize));\n\n  distinationMove = () => (this.props.step * this.props.itemWidth);\n\n  handleClickMoveRight = () => {\n    if (this.state.moveX === (this.maxMove()) && this.props.infinite) {\n      this.setState({ moveX: 0 });\n    } else {\n      this.setState(prevstate => ({\n        moveX: ((prevstate.moveX - this.distinationMove()) < (this.maxMove()))\n          ? this.maxMove()\n          : (prevstate.moveX - this.distinationMove()),\n      }));\n    }\n  };\n\n  handleClickMoveLeft = () => {\n    if (this.state.moveX === 0 && this.props.infinite) {\n      this.setState({ moveX: this.maxMove() });\n    } else {\n      this.setState(prevstate => ({\n        moveX: ((prevstate.moveX + this.distinationMove()) > 0)\n          ? 0\n          : (prevstate.moveX + this.distinationMove()),\n      }));\n    }\n  };\n\n  render() {\n    const {\n      itemWidth,\n      frameSize,\n      animationDuration,\n      infinite,\n    } = this.props;\n\n    const {\n      moveX,\n    } = this.state;\n\n    const width:number = frameSize * itemWidth;\n\n    return (\n      <div\n        className=\"Carousel\"\n      >\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={this.handleClickMoveLeft}\n          disabled={moveX === 0 && !infinite}\n        >\n          {'<'}\n        </button>\n\n        <div className=\"Carousel__box\">\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              transform: `translateX(${moveX}px)`,\n              transition: `transform  ${animationDuration}ms`,\n              width,\n            }}\n          >\n            {this.props.images.map((img, ind) => (\n              <li className=\"oneImg\" key={img}>\n                <img\n                  src={img}\n                  style={{\n                    width: itemWidth,\n                  }}\n                  alt={String(ind + 1)}\n                />\n              </li>\n            ))}\n          </ul>\n\n        </div>\n\n        <button\n          type=\"button\"\n          className=\"button\"\n          data-cy=\"next\"\n          onClick={this.handleClickMoveRight}\n          disabled={-moveX === itemWidth * (10 - frameSize) && !infinite}\n        >\n          {'>'}\n        </button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass AppAltern extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    animationDuration: 1000,\n    step: 3,\n    infinite: false,\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValueVariable = Number(event.target.value);\n    const { name } = event.target;\n\n    const isStateKey = (str: string): str is keyof State => (\n      Object.keys(this.state).includes(str)\n    );\n\n    if (isStateKey(name)) {\n      this.setState({\n        [name]: newValueVariable,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      } as any);\n    }\n  };\n\n  handleInfinite = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ infinite: event.target.checked });\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\"\n          className=\"title\"\n        >\n          {`Carousel with ${images.length} images`}\n        </h1>\n        <Carousel\n          images={images}\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          animationDuration={animationDuration}\n          step={step}\n          infinite={infinite}\n        />\n\n        <label className=\"variables\">\n          Item width:\n          <input\n            className=\"variables__input\"\n            type=\"number\"\n            name=\"itemWidth\"\n            value={itemWidth}\n            onChange={this.handleChange}\n            min=\"130\"\n            max=\"390\"\n          />\n        </label>\n\n        <label className=\"variables\">\n          Frame size:\n          <input\n            className=\"variables__input\"\n            type=\"number\"\n            name=\"frameSize\"\n            value={frameSize}\n            onChange={this.handleChange}\n            min=\"1\"\n            max=\"10\"\n          />\n        </label>\n\n        <label className=\"variables\">\n          Step:\n          <input\n            className=\"variables__input\"\n            type=\"number\"\n            name=\"step\"\n            value={step}\n            onChange={this.handleChange}\n            min=\"1\"\n            max=\"10\"\n          />\n        </label>\n\n        <label className=\"variables\">\n          Animation duration:\n          <input\n            className=\"variables__input\"\n            type=\"number\"\n            name=\"animationDuration\"\n            value={animationDuration}\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <label className=\"variables\">\n          {'Infinite: '}\n          <input\n            type=\"checkbox\"\n            name=\"infinite\"\n            id=\"infinite\"\n            className=\"variables__input\"\n            checked={infinite}\n            onChange={this.handleInfinite}\n          />\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default AppAltern;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}