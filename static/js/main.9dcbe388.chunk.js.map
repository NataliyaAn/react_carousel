{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","moveX","handleClickMoveRight","prevmoveX","maxMove","props","frameSize","step","distinationMove","setState","handleClickMoveLeft","this","itemWidth","animationDuration","className","style","width","transform","transition","images","map","img","ind","src","alt","String","type","onClick","disabled","React","Component","App","handleChangeWidth","event","itemWidth1","Number","target","value","handleChangeAnimationDuration","handleChangeFrameSize","handleChangeStep","length","name","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9dcbe388.chunk.js","sourcesContent":["// import { transform } from 'cypress/types/lodash';\nimport React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n};\ntype State = {\n  moveX: number,\n};\n\nexport class Carousel extends React.Component<Props, State> {\n  state: Readonly<State> = {\n    moveX: 0,\n  };\n\n  // maxMove = this.props.frameSize * (10 - this.props.step);\n\n  // distinationMove = this.props.step * this.props.frameSize;\n\n  handleClickMoveRight = () => {\n    const prevmoveX = this.state.moveX;\n    const maxMove = this.props.frameSize * (10 - this.props.step);\n    const distinationMove = this.props.step * this.props.frameSize;\n\n    this.setState({\n      moveX: ((prevmoveX - distinationMove) < (-maxMove))\n        ? -maxMove\n        : (prevmoveX - distinationMove),\n    });\n  };\n\n  handleClickMoveLeft = () => {\n    const prevmoveX = this.state.moveX;\n    const distinationMove = this.props.step * this.props.frameSize;\n\n    this.setState({\n      moveX: ((prevmoveX + distinationMove) > 0)\n        ? 0\n        : (prevmoveX + distinationMove),\n    });\n  };\n\n  render() {\n    const {\n      itemWidth,\n      frameSize,\n      animationDuration,\n      step,\n    } = this.props;\n\n    const {\n      moveX,\n    } = this.state;\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{\n          width: itemWidth,\n        }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            transform: `translateX(${moveX}px)`,\n            transition: `transform  ${animationDuration}ms`,\n          }}\n        >\n          {this.props.images.map((img, ind) => (\n            <li className=\"oneImg\" key={img}>\n              <img\n                src={img}\n                style={{\n                  width: frameSize,\n                }}\n                alt={String(ind + 1)}\n              />\n            </li>\n          ))}\n        </ul>\n        <div className=\"buttonBlock\">\n          <button\n            type=\"button\"\n            className=\"buttonBlock__button\"\n            onClick={this.handleClickMoveLeft}\n            disabled={moveX === 0}\n          >\n            Prev\n          </button>\n          <button\n            type=\"button\"\n            className=\"buttonBlock__button\"\n            data-cy=\"next\"\n            onClick={this.handleClickMoveRight}\n            disabled={-moveX === frameSize * (10 - step)}\n          >\n            Next\n          </button>\n\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { ChangeEvent } from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth?: number;\n  animationDuration: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 390,\n    frameSize: 130,\n    animationDuration: 500,\n    step: 3,\n  };\n\n  // handleChange = (name: string, value:number) => {\n  //   this.setState((prevState) => ({ ...prevState, [name]: value }));\n  // };\n\n  handleChangeWidth = (event: ChangeEvent<HTMLInputElement>) => {\n    const itemWidth1 = Number(event.target.value);\n\n    this.setState({ itemWidth: itemWidth1 });\n  };\n\n  handleChangeAnimationDuration = (event: ChangeEvent<HTMLInputElement>) => {\n    const animationDuration = Number(event.target.value);\n\n    this.setState({ animationDuration });\n  };\n\n  handleChangeFrameSize = (event: ChangeEvent<HTMLInputElement>) => {\n    const frameSize = Number(event.target.value);\n\n    this.setState({ frameSize });\n  };\n\n  handleChangeStep = (event: ChangeEvent<HTMLInputElement>) => {\n    const step = Number(event.target.value);\n\n    this.setState({ step });\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n    } = this.state;\n    // const inputs:string[] = Object.keys(this.state)\n    //   .filter(el => el !== 'images');\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\"\n          className=\"title\"\n        >\n          {`Carousel with ${images.length} images`}\n        </h1>\n        <label className=\"variables\">\n          Item width:\n          <input\n            className=\"variables__input\"\n            type=\"number\"\n            name=\"itemWidth\"\n            value={itemWidth}\n            onChange={this.handleChangeWidth}\n          />\n        </label>\n\n        <label className=\"variables\">\n          Frame size:\n          <input\n            className=\"variables__input\"\n            type=\"number\"\n            name=\"frameSize\"\n            value={frameSize}\n            onChange={this.handleChangeFrameSize}\n          />\n        </label>\n\n        <label className=\"variables\">\n          Step:\n          <input\n            className=\"variables__input\"\n            type=\"number\"\n            name=\"step\"\n            value={step}\n            onChange={this.handleChangeStep}\n          />\n        </label>\n\n        <label className=\"variables\">\n          Animation duration:\n          <input\n            className=\"variables__input\"\n            type=\"number\"\n            name=\"animationDuration\"\n            value={animationDuration}\n            onChange={this.handleChangeAnimationDuration}\n          />\n        </label>\n        <Carousel\n          images={images}\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          animationDuration={animationDuration}\n          step={step}\n        />\n        {/* {inputs.map(variable => (\n          <label className=\"variables\" key={variable}>\n            {`${variable[0].toLocaleUpperCase() + variable.slice(1)} :`}\n            <input\n              type=\"number\"\n              name={`${variable}`}\n              value={this.state[`${variable}`]}\n              onChange={this.handleChange}\n            />\n          </label>\n        ))} */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}